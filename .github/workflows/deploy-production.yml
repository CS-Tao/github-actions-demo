name: Deploy to production enviroment

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        node-version: [10.x, 12.x, 14.x, 15.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: node-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node-version }}
      - name: Setup Node@${{ matrix.node-version }} environment
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Build project
        run: |
          yarn
          yarn build
      - name: Upload artifacts for Node@${{ matrix.node-version }}
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-node-${{ matrix.node-version }}
          path: build/
          if-no-files-found: error

  test:
    needs: build

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        node-version: [10.x, 12.x, 14.x, 15.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: node-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node-version }}
      - name: Setup Node@${{ matrix.node-version }} environment
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Build project
        run: yarn test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    env:
      NODE_VERSION: 14.x

    steps:
      - name: Download artifacts for Node@${{ env.NODE_VERSION }}
        uses: actions/download-artifact@v2
        with:
          name: artifacts-node-${{ env.NODE_VERSION }}
          path: build/
      - name: List artifacts
        run: ls -la build
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
